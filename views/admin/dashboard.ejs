<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Salon</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/admin-styles.css">
    <style>
        body {
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
            background: #f8f9fa;
            margin: 0;
            padding: 0;
            min-height: 100vh;
        }

        .admin-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
        }

        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .dashboard-title {
            font-size: 1.8rem;
            font-weight: 600;
            color: var(--color-text);
            margin: 0;
        }

        .date-filter {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: white;
            border-radius: var(--border-radius);
            padding: 1.5rem;
            box-shadow: var(--shadow-md);
            transition: var(--transition);
            animation: slideUp 0.5s ease-out;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-lg);
        }

        .stat-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .stat-title {
            font-size: 0.9rem;
            color: var(--color-text-light);
            margin: 0;
        }

        .stat-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            color: white;
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 600;
            color: var(--color-text);
            margin: 0;
        }

        .stat-trend {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.85rem;
            margin-top: 0.5rem;
        }

        .trend-up {
            color: var(--color-success);
        }

        .trend-down {
            color: var(--color-danger);
        }

        .main-content {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 1.5rem;
        }

        .recent-bookings {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-md);
            overflow: hidden;
        }

        .reviews-section {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-md);
            overflow: hidden;
        }

        .section-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--color-border);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .section-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--color-text);
            margin: 0;
        }

        .section-content {
            padding: 1.5rem;
        }

        .booking-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem;
            border-bottom: 1px solid var(--color-border);
            transition: var(--transition);
        }

        .booking-row:last-child {
            border-bottom: none;
        }

        .booking-row:hover {
            background: rgba(0, 0, 0, 0.02);
        }

        .booking-info {
            flex: 1;
        }

        .booking-name {
            font-weight: 500;
            color: var(--color-text);
            margin: 0 0 0.25rem;
        }

        .booking-details {
            font-size: 0.85rem;
            color: var(--color-text-light);
            margin: 0;
        }

        .booking-actions {
            display: flex;
            gap: 0.5rem;
        }

        .review-card {
            padding: 1rem;
            border-bottom: 1px solid var(--color-border);
            transition: var(--transition);
        }

        .review-card:last-child {
            border-bottom: none;
        }

        .review-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 0.5rem;
        }

        .review-author {
            font-weight: 500;
            color: var(--color-text);
            margin: 0;
        }

        .review-date {
            font-size: 0.85rem;
            color: var(--color-text-light);
        }

        .review-rating {
            color: #ffc107;
            margin: 0.5rem 0;
        }

        .review-text {
            font-size: 0.9rem;
            color: var(--color-text-light);
            margin: 0;
            line-height: 1.5;
        }

        .quick-actions {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-top: 2rem;
        }

        .action-card {
            background: white;
            border-radius: var(--border-radius);
            padding: 1.5rem;
            text-align: center;
            box-shadow: var(--shadow-md);
            transition: var(--transition);
            text-decoration: none;
            color: var(--color-text);
        }

        .action-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-lg);
        }

        .action-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--color-primary), var(--color-primary-dark));
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin: 0 auto 1rem;
        }

        .action-title {
            font-weight: 500;
            margin: 0 0 0.5rem;
        }

        .action-description {
            font-size: 0.85rem;
            color: var(--color-text-light);
            margin: 0;
        }

        @media (max-width: 1024px) {
            .main-content {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .admin-container {
                padding: 1rem;
            }

            .dashboard-header {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }

            .date-filter {
                width: 100%;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .booking-row {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }

            .booking-actions {
                width: 100%;
                justify-content: flex-end;
            }
        }
    </style>
</head>
<body>
    <div class="admin-container">
        <div class="dashboard-header">
            <h1 class="dashboard-title">Dashboard</h1>
            <div class="date-filter">
                <select class="select-control" id="dateRange">
                    <option value="today">Today</option>
                    <option value="week">This Week</option>
                    <option value="month" selected>This Month</option>
                    <option value="year">This Year</option>
                </select>
            </div>
        </div>

        <div class="stats-grid">
    <div class="stat-card">
                <div class="stat-header">
                    <h3 class="stat-title">Total Bookings</h3>
                    <div class="stat-icon" style="background: linear-gradient(135deg, #4CAF50, #2E7D32);">
                        <i class="fas fa-calendar-check"></i>
                    </div>
                </div>
                <p class="stat-value"><%= bookings.length %></p>
                <div class="stat-trend trend-up">
                    <i class="fas fa-arrow-up"></i>
                    <span><%= bookings.filter(b => new Date(b.createdAt) > new Date(Date.now() - 30*24*60*60*1000)).length %> new this month</span>
                </div>
    </div>
    
    <div class="stat-card">
                <div class="stat-header">
                    <h3 class="stat-title">New Bookings</h3>
                    <div class="stat-icon" style="background: linear-gradient(135deg, #2196F3, #1976D2);">
                        <i class="fas fa-calendar-plus"></i>
                    </div>
                </div>
                <p class="stat-value"><%= bookings.filter(b => new Date(b.createdAt) > new Date(Date.now() - 7*24*60*60*1000)).length %></p>
                <div class="stat-trend trend-up">
                    <i class="fas fa-arrow-up"></i>
                    <span>Last 7 days</span>
                </div>
    </div>
    
    <div class="stat-card">
                <div class="stat-header">
                    <h3 class="stat-title">Services</h3>
                    <div class="stat-icon" style="background: linear-gradient(135deg, #9C27B0, #7B1FA2);">
                        <i class="fas fa-spa"></i>
                    </div>
                </div>
                <p class="stat-value"><%= services.length %></p>
                <div class="stat-trend trend-up">
                    <i class="fas fa-arrow-up"></i>
                    <span><%= services.filter(s => new Date(s.createdAt) > new Date(Date.now() - 30*24*60*60*1000)).length %> new this month</span>
                </div>
    </div>
    
    <div class="stat-card">
                <div class="stat-header">
                    <h3 class="stat-title">Gallery Items</h3>
                    <div class="stat-icon" style="background: linear-gradient(135deg, #FF9800, #F57C00);">
                        <i class="fas fa-images"></i>
                    </div>
                </div>
                <p class="stat-value"><%= gallery.length %></p>
                <div class="stat-trend trend-up">
                    <i class="fas fa-arrow-up"></i>
                    <span><%= gallery.filter(g => new Date(g.createdAt) > new Date(Date.now() - 30*24*60*60*1000)).length %> new this month</span>
                </div>
    </div>
</div>

        <div class="main-content">
            <div class="recent-bookings">
                <div class="section-header">
                    <h2 class="section-title">Recent Bookings</h2>
                    <div class="section-actions">
                        <button class="btn btn-icon" onclick="exportBookings()">
                            <i class="fas fa-download"></i>
                        </button>
                    </div>
                </div>
                <div class="section-content">
                    <% if (bookings && bookings.length > 0) { %>
                        <% bookings.slice(0, 5).forEach(booking => { %>
                            <div class="booking-row">
                                <div class="booking-info">
                                    <h3 class="booking-name"><%= booking.customerName %></h3>
                                    <p class="booking-details">
                                        <i class="fas fa-calendar"></i> <%= new Date(booking.date).toLocaleDateString() %>
                                        <i class="fas fa-clock"></i> <%= booking.time %>
                                        <i class="fas fa-spa"></i> <%= booking.service %>
                                    </p>
                                </div>
                                <div class="booking-actions">
                                    <button class="btn btn-sm" onclick="viewBooking('<%= booking._id %>')">
                                        <i class="fas fa-eye"></i> View
                                    </button>
                                    <button class="btn btn-sm" onclick="updateStatus('<%= booking._id %>')">
                                        <i class="fas fa-check"></i> Update
                                    </button>
                                </div>
    </div>
                        <% }); %>
                    <% } else { %>
                        <p class="text-center">No recent bookings</p>
                    <% } %>
                </div>
            </div>

            <div class="reviews-section">
                <div class="section-header">
                    <h2 class="section-title">Google Reviews</h2>
                    <button class="btn btn-icon" onclick="refreshReviews()">
                        <i class="fas fa-sync-alt"></i>
                    </button>
                </div>
                <div class="section-content" id="reviewsContainer">
                    <div class="loading-reviews">
                        <p>Loading reviews...</p>
                        <p class="loading-details">Fetching reviews from Google Places</p>
                    </div>
        </div>
    </div>
</div>

        <div class="quick-actions">
            <a href="/admin/bookings" class="action-card">
                <div class="action-icon">
                    <i class="fas fa-calendar-plus"></i>
                </div>
                <h3 class="action-title">New Booking</h3>
                <p class="action-description">Create a new appointment for a client</p>
            </a>

            <a href="/admin/services" class="action-card">
                <div class="action-icon">
                    <i class="fas fa-spa"></i>
                </div>
                <h3 class="action-title">Manage Services</h3>
                <p class="action-description">Add or edit salon services</p>
            </a>

            <a href="/admin/gallery" class="action-card">
                <div class="action-icon">
                    <i class="fas fa-images"></i>
                </div>
                <h3 class="action-title">Gallery</h3>
                <p class="action-description">Manage your salon's photo gallery</p>
            </a>

            <a href="/admin/team" class="action-card">
                <div class="action-icon">
                    <i class="fas fa-users"></i>
                </div>
                <h3 class="action-title">Team</h3>
                <p class="action-description">Manage your staff members</p>
            </a>

            <a href="/admin/settings" class="action-card">
                <div class="action-icon">
                    <i class="fas fa-cog"></i>
                </div>
                <h3 class="action-title">Settings</h3>
                <p class="action-description">Configure your salon settings</p>
        </a>
    </div>
</div> 

    <script>
        // Function to load Google Maps script
        function loadGoogleMapsScript() {
            return new Promise((resolve, reject) => {
                if (window.google && window.google.maps) {
                    resolve();
                    return;
                }

                const script = document.createElement('script');
                script.src = `https://maps.googleapis.com/maps/api/js?key=<%= process.env.GOOGLE_MAPS_API_KEY %>&libraries=places`;
                script.async = true;
                script.defer = true;
                script.onload = resolve;
                script.onerror = () => {
                    console.error('Failed to load Google Maps script');
                    const reviewsContainer = document.getElementById('reviewsContainer');
                    if (reviewsContainer) {
                        reviewsContainer.innerHTML = `
                            <div class="reviews-error">
                                <p>Unable to load Google Maps</p>
                                <p class="error-details">Please check your Google Maps API key configuration.</p>
                                <button class="btn btn-sm" onclick="loadGoogleReviews()">
                                    <i class="fas fa-sync-alt"></i> Retry
                                </button>
                            </div>
                        `;
                    }
                    reject(new Error('Failed to load Google Maps script'));
                };
                document.head.appendChild(script);
            });
        }

        // Function to load Google Reviews
        async function loadGoogleReviews() {
            try {
                await loadGoogleMapsScript();
                
                const service = new google.maps.places.PlacesService(document.createElement('div'));
                const reviewsContainer = document.getElementById('reviewsContainer');
                
                // Check if we have the required business information
                const businessName = '<%= siteInfo.salonName || "" %>';
                const latitude = parseFloat('<%= siteInfo.mapLat || 0 %>');
                const longitude = parseFloat('<%= siteInfo.mapLng || 0 %>');
                
                if (!businessName || isNaN(latitude) || isNaN(longitude)) {
                    reviewsContainer.innerHTML = `
                        <div class="no-reviews">
                            <p>Business Information Required</p>
                            <p class="no-reviews-details">Please set up your business information in the Settings page to view reviews.</p>
                            <a href="/admin/settings" class="btn btn-sm">
                                <i class="fas fa-cog"></i> Go to Settings
                            </a>
                        </div>
                    `;
                    return;
                }
                
                // First, search for the place using text search
                const searchRequest = {
                    query: businessName,
                    location: new google.maps.LatLng(latitude, longitude),
                    radius: 5000
                };

                service.textSearch(searchRequest, (results, status) => {
                    console.log('Places search results:', { status, resultsCount: results?.length || 0 });
                    
                    if (status === google.maps.places.PlacesServiceStatus.OK && results && results.length > 0) {
                        // Get details of the first result
                        const placeId = results[0].place_id;
                        const detailsRequest = {
                            placeId: placeId,
                            fields: ['reviews', 'rating', 'user_ratings_total', 'name', 'formatted_address']
                        };

                        service.getDetails(detailsRequest, (place, detailsStatus) => {
                            console.log('Place details:', { 
                                status: detailsStatus, 
                                hasPlace: !!place,
                                hasReviews: !!place?.reviews,
                                reviewCount: place?.reviews?.length || 0
                            });

                            if (detailsStatus === google.maps.places.PlacesServiceStatus.OK && place && place.reviews) {
                                reviewsContainer.innerHTML = '';
                                
                                // Add overall rating
                                const ratingHtml = `
                                    <div class="overall-rating">
                                        <div class="rating-value">${place.rating || 0}</div>
                                        <div class="rating-stars">${generateStars(place.rating || 0)}</div>
                                        <div class="rating-count">${place.user_ratings_total || 0} reviews</div>
                                    </div>
                                `;
                                reviewsContainer.innerHTML = ratingHtml;
                                
                                // Add individual reviews
                                place.reviews.slice(0, 5).forEach(review => {
                                    const reviewCard = document.createElement('div');
                                    reviewCard.className = 'review-card';
                                    reviewCard.innerHTML = `
                                        <div class="review-header">
                                            <h3 class="review-author">${review.author_name}</h3>
                                            <span class="review-date">${formatDate(review.time)}</span>
                                        </div>
                                        <div class="review-rating">
                                            ${generateStars(review.rating)}
                                        </div>
                                        <p class="review-text">${review.text}</p>
                                    `;
                                    reviewsContainer.appendChild(reviewCard);
                                });

                                // Add link to Google Maps
                                const mapsLink = document.createElement('div');
                                mapsLink.className = 'maps-link';
                                mapsLink.innerHTML = `
                                    <a href="https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(businessName)}" 
                                       target="_blank" class="btn btn-sm">
                                        <i class="fas fa-external-link-alt"></i> View on Google Maps
                                    </a>
                                `;
                                reviewsContainer.appendChild(mapsLink);
                            } else {
                                showNoReviews();
                            }
                        });
                    } else {
                        showNoReviews();
                    }
                });
            } catch (error) {
                console.error('Error loading reviews:', error);
                showReviewsError();
            }
        }

        // Show no reviews message
        function showNoReviews() {
            const reviewsContainer = document.getElementById('reviewsContainer');
            if (reviewsContainer) {
                reviewsContainer.innerHTML = `
                    <div class="no-reviews">
                        <p>No reviews available</p>
                        <p class="no-reviews-details">There are no Google reviews for your business yet.</p>
                        <a href="https://www.google.com/maps/search/?api=1&query=<%= encodeURIComponent(siteInfo.salonName) %>" 
                           target="_blank" class="btn btn-sm">
                            <i class="fas fa-external-link-alt"></i> View on Google Maps
                        </a>
                    </div>
                `;
            }
        }

        // Show reviews error message
        function showReviewsError() {
            const reviewsContainer = document.getElementById('reviewsContainer');
            if (reviewsContainer) {
                reviewsContainer.innerHTML = `
                    <div class="reviews-error">
                        <p>Unable to load reviews</p>
                        <p class="error-details">There was an error loading the reviews. Please try again later.</p>
                        <button class="btn btn-sm" onclick="loadGoogleReviews()">
                            <i class="fas fa-sync-alt"></i> Retry
                        </button>
                    </div>
                `;
            }
        }

        // Helper function to generate star rating
        function generateStars(rating) {
            let stars = '';
            for (let i = 1; i <= 5; i++) {
                if (i <= rating) {
                    stars += '<i class="fas fa-star"></i>';
                } else if (i - 0.5 <= rating) {
                    stars += '<i class="fas fa-star-half-alt"></i>';
                } else {
                    stars += '<i class="far fa-star"></i>';
                }
            }
            return stars;
        }

        // Helper function to format date
        function formatDate(timestamp) {
            const date = new Date(timestamp * 1000);
            const now = new Date();
            const diff = now - date;
            const days = Math.floor(diff / (1000 * 60 * 60 * 24));

            if (days === 0) return 'Today';
            if (days === 1) return 'Yesterday';
            if (days < 7) return `${days} days ago`;
            if (days < 30) return `${Math.floor(days / 7)} weeks ago`;
            return date.toLocaleDateString();
        }

        // Function to refresh reviews
        function refreshReviews() {
            const button = document.querySelector('.reviews-section .btn-icon');
            button.classList.add('loading');
            loadGoogleReviews().finally(() => {
                button.classList.remove('loading');
            });
        }

        // Function to view booking details
        function viewBooking(id) {
            // Implement booking details view
            console.log('View booking:', id);
        }

        // Function to update booking status
        function updateStatus(id) {
            // Implement status update
            console.log('Update status:', id);
        }

        // Function to export bookings
        function exportBookings() {
            // Implement export functionality
            console.log('Export bookings');
        }

        // Load reviews when page loads
        document.addEventListener('DOMContentLoaded', loadGoogleReviews);
    </script>
</body>
</html> 
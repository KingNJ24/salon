<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Services - Admin Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/admin-styles.css">
<style>
        .services-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .services-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .services-title {
            font-size: 1.8rem;
            font-weight: 600;
            color: var(--color-text);
            margin: 0;
        }

        .services-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .service-card {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-md);
            overflow: hidden;
            transition: var(--transition);
        }

        .service-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-lg);
        }

        .service-image {
            height: 200px;
            overflow: hidden;
            position: relative;
        }

        .service-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .service-card:hover .service-image img {
            transform: scale(1.05);
        }

        .service-content {
            padding: 1.5rem;
        }

        .service-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
        }

        .service-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--color-text);
            margin: 0;
        }

        .service-price {
            font-size: 1.1rem;
            font-weight: 500;
            color: var(--color-primary);
        }

        .service-description {
            color: var(--color-text-light);
            font-size: 0.9rem;
            margin-bottom: 1rem;
            line-height: 1.5;
        }

        .service-actions {
            display: flex;
            gap: 0.5rem;
        }

        .btn-icon {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            background: var(--color-light);
            color: var(--color-text);
            border: none;
            cursor: pointer;
            transition: var(--transition);
        }

        .btn-icon:hover {
            background: var(--color-primary);
            color: white;
        }

        .add-service-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
            background: var(--color-primary);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
        }

        .add-service-btn:hover {
            background: var(--color-primary-dark);
            transform: translateY(-2px);
        }

        .service-form {
            background: white;
            border-radius: var(--border-radius);
            padding: 2rem;
            box-shadow: var(--shadow-md);
            max-width: 600px;
            margin: 0 auto;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: var(--color-text);
        }

        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid var(--color-border);
            border-radius: var(--border-radius);
            font-size: 1rem;
            transition: var(--transition);
        }

        .form-control:focus {
            border-color: var(--color-primary);
            outline: none;
            box-shadow: 0 0 0 2px rgba(var(--color-primary-rgb), 0.1);
        }

        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            margin-top: 2rem;
        }

        @media (max-width: 768px) {
            .services-container {
                padding: 1rem;
            }

            .services-header {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }

            .services-grid {
                grid-template-columns: 1fr;
            }

            .service-form {
                padding: 1.5rem;
            }
        }

        .services-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .view-mode-selector {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .view-mode-selector select {
            padding: 0.5rem;
            border: 1px solid var(--color-border);
            border-radius: var(--border-radius);
            background: white;
        }

        .service-type-selector {
            display: flex;
            gap: 1rem;
        }

        .radio-label {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            cursor: pointer;
        }

        .image-upload, .video-upload {
            border: 2px dashed var(--color-border);
            padding: 1rem;
            border-radius: var(--border-radius);
            background: var(--color-light);
        }

        .image-preview, .video-preview {
            text-align: center;
        }

        .upload-btn {
            background: var(--color-primary);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
        }

        .upload-btn:hover {
            background: var(--color-primary-dark);
        }

        #generateThumbnailBtn {
            background: var(--color-secondary);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
        }

        #generateThumbnailBtn:hover {
            background: var(--color-secondary-dark);
        }
    </style>
</head>
<body>
    <div class="services-container">
        <div class="services-header">
            <h1 class="services-title">Manage Services</h1>
            <div class="services-actions">
                <div class="view-mode-selector">
                    <label for="viewMode">Display Format:</label>
                    <select id="viewMode" onchange="updateViewMode(this.value)">
                        <option value="grid" <%= siteInfo.servicesViewMode !== 'catalog' ? 'selected' : '' %>>Grid View (Images/Videos)</option>
                        <option value="catalog" <%= siteInfo.servicesViewMode === 'catalog' ? 'selected' : '' %>>Catalog View (Text Only)</option>
                    </select>
                </div>
                <button class="add-service-btn" onclick="showAddServiceForm()">
                    <i class="fas fa-plus"></i>
                    Add New Service
                </button>
            </div>
        </div>

        <div class="services-grid">
            <% if (services && services.length > 0) { %>
                <% services.forEach(service => { %>
                    <div class="service-card">
                        <div class="service-image">
                            <img src="<%= service.image %>" alt="<%= service.name %>" 
                                onerror="this.src='https://via.placeholder.com/300x200?text=<%= service.name.replace(/ /g, '+') %>'">
                        </div>
                        <div class="service-content">
                            <div class="service-header">
                                <h3 class="service-title"><%= service.name %></h3>
                                <span class="service-price"><%= siteInfo.currencySymbol || 'â‚¹' %><%= service.price %></span>
                            </div>
                            <p class="service-description"><%= service.description %></p>
                            <div class="service-actions">
                                <button class="btn-icon" onclick="editService('<%= service._id %>')">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn-icon" onclick="deleteService('<%= service._id %>')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="no-services">
                    <p>No services available. Add your first service to get started!</p>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Add/Edit Service Modal -->
    <div id="serviceModal" class="modal" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <h2 id="modalTitle">Add New Service</h2>
                <button class="close-modal">&times;</button>
            </div>
            <form id="serviceForm" class="service-form">
                <input type="hidden" id="serviceId" name="id">
                
                <div class="form-group">
                    <label for="serviceName" class="form-label">Service Name</label>
                    <input type="text" id="serviceName" name="name" class="form-control" required>
                </div>
                
                <div class="form-group">
                    <label for="serviceDescription" class="form-label">Description</label>
                    <textarea id="serviceDescription" name="description" class="form-control" rows="4" required></textarea>
                </div>
                
                <div class="form-group">
                    <label for="servicePrice" class="form-label">Price</label>
                    <input type="number" id="servicePrice" name="price" class="form-control" required min="0" step="0.01">
                </div>
                
                <div class="form-group">
                    <label class="form-label">Service Type</label>
                    <div class="service-type-selector">
                        <label class="radio-label">
                            <input type="radio" name="type" value="image" checked onchange="toggleMediaType('image')">
                            Image
                        </label>
                        <label class="radio-label">
                            <input type="radio" name="type" value="video" onchange="toggleMediaType('video')">
                            Video
                        </label>
                    </div>
                </div>
                
                <div id="imageUploadSection" class="form-group">
                    <label for="serviceImage" class="form-label">Service Image</label>
                    <div class="image-upload">
                        <div class="image-preview" style="margin-bottom: 10px;">
                            <img src="" alt="Preview" style="max-width: 100%; max-height: 200px; display: none;">
                        </div>
                        <input type="file" accept="image/*" class="form-control" id="imageFileInput">
                        <div style="display: flex; gap: 10px; margin-top: 10px;">
                            <button type="button" class="btn upload-btn">Upload</button>
                            <input type="text" id="serviceImage" name="image" class="image-url-input" style="flex: 1;" placeholder="Image URL">
                        </div>
                    </div>
                </div>
                
                <div id="videoUploadSection" class="form-group" style="display: none;">
                    <label for="serviceVideo" class="form-label">Service Video</label>
                    <div class="video-upload">
                        <div class="video-preview" style="margin-bottom: 10px; max-width: 100%; max-height: 300px; display: none;">
                            <video id="videoPreview" controls preload="metadata" style="max-width: 100%; max-height: 300px;">
                                <source src="" type="video/mp4">
                                Your browser does not support the video tag.
                            </video>
                        </div>
                        <input type="file" accept="video/*" id="videoFileInput" class="form-control">
                        <div style="display: flex; gap: 10px; margin-top: 10px;">
                            <button type="button" class="btn upload-btn" id="videoUploadBtn">Upload Video</button>
                            <input type="text" id="serviceVideo" name="videoUrl" class="video-url-input" style="flex: 1;" placeholder="Video URL">
                        </div>
                        <button type="button" class="btn" id="generateThumbnailBtn" style="margin-top: 10px;">Generate Thumbnail from Video</button>
                        <p id="thumbnailStatus" style="margin-top: 10px; display: none;"></p>
                    </div>
                </div>
                
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary close-modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Service</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        function showAddServiceForm() {
            document.getElementById('modalTitle').textContent = 'Add New Service';
            document.getElementById('serviceForm').reset();
            document.getElementById('serviceId').value = '';
            document.getElementById('serviceModal').style.display = 'flex';
        }

        function editService(serviceId) {
            // Fetch service details and populate form
            fetch(`/api/services/${serviceId}`)
                .then(response => response.json())
                .then(service => {
                    document.getElementById('modalTitle').textContent = 'Edit Service';
                    document.getElementById('serviceId').value = service._id;
                    document.getElementById('serviceName').value = service.name;
                    document.getElementById('servicePrice').value = service.price;
                    document.getElementById('serviceDescription').value = service.description;
                    document.getElementById('serviceImage').value = service.image;
                    document.getElementById('serviceModal').style.display = 'flex';
                })
                .catch(error => {
                    console.error('Error fetching service:', error);
                    alert('Failed to load service details. Please try again.');
                });
        }

        function deleteService(serviceId) {
            if (confirm('Are you sure you want to delete this service?')) {
                fetch(`/api/services/${serviceId}`, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        throw new Error('Failed to delete service');
                    }
                })
                .catch(error => {
                    console.error('Error deleting service:', error);
                    alert('Failed to delete service. Please try again.');
                });
            }
        }

        function handleServiceSubmit(event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            const serviceId = formData.get('id');
            const method = serviceId ? 'PUT' : 'POST';
            const url = serviceId ? `/api/services/${serviceId}` : '/api/services';

            // Handle file upload
            const fileInput = document.getElementById('serviceImage');
            if (fileInput && fileInput.files.length > 0) {
                const file = fileInput.files[0];
                const reader = new FileReader();
                reader.onloadend = function() {
                    formData.set('file', reader.result);
                    submitForm(formData, method, url);
                };
                reader.readAsDataURL(file);
            } else {
                submitForm(formData, method, url);
            }
        }

        function submitForm(formData, method, url) {
            fetch(url, {
                method: method,
                body: formData
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => {
                        throw new Error(err.message || 'Failed to save service');
                    });
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    window.location.reload();
                } else {
                    throw new Error(data.message || 'Failed to save service');
                }
            })
            .catch(error => {
                console.error('Error saving service:', error);
                alert(error.message || 'Failed to save service. Please try again.');
            });
        }

        function closeModal() {
            document.getElementById('serviceModal').style.display = 'none';
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('serviceModal');
            if (event.target === modal) {
                closeModal();
            }
        }

        function toggleMediaType(type) {
            const imageSection = document.getElementById('imageUploadSection');
            const videoSection = document.getElementById('videoUploadSection');
            
            if (type === 'video') {
                imageSection.style.display = 'none';
                videoSection.style.display = 'block';
                                } else {
                imageSection.style.display = 'block';
                videoSection.style.display = 'none';
            }
        }

        function updateViewMode(mode) {
            fetch('/api/settings/update', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ 
                    servicesViewMode: mode
                })
            })
            .then(response => response.json())
            .then(data => {
                    if (data.success) {
                    window.location.reload();
                    } else {
                    alert('Failed to update view mode');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to update view mode');
            });
        }
</script> 
</body>
</html> 
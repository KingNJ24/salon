<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Settings - Salon Admin</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/admin-styles.css">
    <style>
        body {
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
            background: #f8f9fa;
            margin: 0;
            padding: 0;
            min-height: 100vh;
        }

        .admin-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .settings-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .settings-title {
            font-size: 1.8rem;
            font-weight: 600;
            color: var(--color-text);
            margin: 0;
        }

        .settings-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        .settings-card {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-md);
            overflow: hidden;
            transition: var(--transition);
        }

        .settings-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-lg);
        }

        .card-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--color-border);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .card-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--color-text);
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .card-icon {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--color-primary), var(--color-primary-dark));
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1rem;
        }

        .card-body {
            padding: 1.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            font-size: 0.9rem;
            font-weight: 500;
            color: var(--color-text);
            margin-bottom: 0.5rem;
        }

        .form-control {
            width: 100%;
            box-sizing: border-box;
        }

        .form-control:focus {
            border-color: var(--color-primary);
            box-shadow: 0 0 0 3px rgba(255, 105, 180, 0.1);
        }

        .form-error {
            color: var(--color-danger);
            font-size: 0.85rem;
            margin-top: 0.5rem;
            display: none;
        }

        .form-control.error {
            border-color: var(--color-danger);
        }

        .form-control.error:focus {
            box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.1);
        }

        .form-control.error + .form-error {
            display: block;
        }

        .color-picker {
            display: flex;
            gap: 1rem;
            margin-top: 0.5rem;
        }

        .color-option {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            transition: var(--transition);
            border: 2px solid transparent;
        }

        .color-option:hover {
            transform: scale(1.1);
        }

        .color-option.active {
            border-color: var(--color-primary);
        }

        .social-links {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
        }

        .social-link {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.8rem;
            border-radius: var(--border-radius);
            background: var(--color-secondary);
            color: var(--color-text);
            text-decoration: none;
            transition: var(--transition);
        }

        .social-link:hover {
            background: var(--color-primary);
            color: white;
            transform: translateY(-2px);
        }

        .social-link i {
            font-size: 1.2rem;
        }

        .save-button {
            margin-top: 1rem;
        }

        @media (max-width: 768px) {
            .admin-container {
                padding: 1rem;
            }

            .settings-header {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }

            .settings-grid {
                grid-template-columns: 1fr;
            }

            .social-links {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="admin-container">
        <div class="settings-header">
            <h1 class="settings-title">Settings</h1>
                    </div>
                    
        <div class="settings-grid">
            <!-- General Settings -->
            <div class="settings-card">
                <div class="card-header">
                    <h2 class="card-title">
                        <div class="card-icon">
                            <i class="fas fa-cog"></i>
                    </div>
                        General Settings
                    </h2>
                </div>
                <div class="card-body">
                    <form id="generalSettingsForm">
            <div class="form-group">
                            <label class="form-label" for="businessName">Business Name</label>
                            <input type="text" id="businessName" name="businessName" class="form-control" value="Nandini J Makeup Studio & Luxury Salon -HD Party Makeup |Haircut & Styling |HD Bridal Makeup in Shamli" required>
                            <div class="form-error">Business name is required</div>
            </div>
            
            <div class="form-group">
                            <label class="form-label" for="latitude">Latitude</label>
                            <input type="number" id="latitude" name="latitude" class="form-control" step="any" value="29.445101" required>
                            <div class="form-error">Valid latitude is required</div>
            </div>
            
            <div class="form-group">
                            <label class="form-label" for="longitude">Longitude</label>
                            <input type="number" id="longitude" name="longitude" class="form-control" step="any" value="77.305900" required>
                            <div class="form-error">Valid longitude is required</div>
            </div>
            
            <div class="form-group">
                            <label class="form-label" for="salonName">Salon Name</label>
                            <input type="text" id="salonName" name="salonName" class="form-control" value="<%= siteInfo.salonName || '' %>">
            </div>
            
            <div class="form-group">
                            <label class="form-label" for="salonEmail">Email Address</label>
                            <input type="email" id="salonEmail" class="form-control" value="contact@nandinij.com">
            </div>
            
            <div class="form-group">
                            <label class="form-label" for="salonPhone">Phone Number</label>
                            <input type="tel" id="salonPhone" class="form-control" value="+1 234 567 8900">
            </div>
            
            <div class="form-group">
                            <label class="form-label" for="salonAddress">Address</label>
                            <textarea id="salonAddress" class="form-control" rows="3">123 Beauty Street, City, State 12345</textarea>
            </div>
            
                        <button type="submit" class="btn btn-primary save-button">
                            <i class="fas fa-save"></i>
                            Save Changes
                        </button>
                    </form>
                </div>
            </div>
            
            <!-- Appearance Settings -->
            <div class="settings-card">
                <div class="card-header">
                    <h2 class="card-title">
                        <div class="card-icon">
                            <i class="fas fa-paint-brush"></i>
                        </div>
                        Appearance
                    </h2>
                </div>
                <div class="card-body">
                    <form id="appearanceSettingsForm">
            <div class="form-group">
                            <label class="form-label">Primary Color</label>
                            <div class="color-picker">
                                <div class="color-option active" style="background: #ff69b4;" data-color="#ff69b4"></div>
                                <div class="color-option" style="background: #4CAF50;" data-color="#4CAF50"></div>
                                <div class="color-option" style="background: #2196F3;" data-color="#2196F3"></div>
                                <div class="color-option" style="background: #9C27B0;" data-color="#9C27B0"></div>
                                <div class="color-option" style="background: #FF9800;" data-color="#FF9800"></div>
            </div>
            </div>
            
            <div class="form-group">
                            <label class="form-label" for="logoUpload">Logo</label>
                            <input type="file" id="logoUpload" class="form-control" accept="image/*">
            </div>
            
            <div class="form-group">
                            <label class="form-label" for="faviconUpload">Favicon</label>
                            <input type="file" id="faviconUpload" class="form-control" accept="image/*">
            </div>
            
                        <button type="submit" class="btn btn-primary save-button">
                            <i class="fas fa-save"></i>
                            Save Changes
                        </button>
                    </form>
                </div>
            </div>
            
            <!-- Social Media Settings -->
            <div class="settings-card">
                <div class="card-header">
                    <h2 class="card-title">
                        <div class="card-icon">
                            <i class="fas fa-share-alt"></i>
                        </div>
                        Social Media
                    </h2>
                </div>
                <div class="card-body">
                    <form id="socialSettingsForm">
                        <div class="social-links">
                            <a href="#" class="social-link">
                                <i class="fab fa-facebook"></i>
                                <span>Facebook</span>
                            </a>
                            <a href="#" class="social-link">
                                <i class="fab fa-instagram"></i>
                                <span>Instagram</span>
                            </a>
                            <a href="#" class="social-link">
                                <i class="fab fa-twitter"></i>
                                <span>Twitter</span>
                            </a>
                            <a href="#" class="social-link">
                                <i class="fab fa-youtube"></i>
                                <span>YouTube</span>
                            </a>
            </div>
            
            <div class="form-group">
                            <label class="form-label" for="facebookUrl">Facebook URL</label>
                            <input type="url" id="facebookUrl" class="form-control" placeholder="https://facebook.com/your-page">
            </div>
            
            <div class="form-group">
                            <label class="form-label" for="instagramUrl">Instagram URL</label>
                            <input type="url" id="instagramUrl" class="form-control" placeholder="https://instagram.com/your-profile">
            </div>
            
            <div class="form-group">
                            <label class="form-label" for="twitterUrl">Twitter URL</label>
                            <input type="url" id="twitterUrl" class="form-control" placeholder="https://twitter.com/your-handle">
            </div>
            
            <div class="form-group">
                            <label class="form-label" for="youtubeUrl">YouTube URL</label>
                            <input type="url" id="youtubeUrl" class="form-control" placeholder="https://youtube.com/your-channel">
            </div>
            
                        <button type="submit" class="btn btn-primary save-button">
                            <i class="fas fa-save"></i>
                            Save Changes
                        </button>
                    </form>
                </div>
            </div>
            
            <!-- Notification Settings -->
            <div class="settings-card">
                <div class="card-header">
                    <h2 class="card-title">
                        <div class="card-icon">
                            <i class="fas fa-bell"></i>
                    </div>
                        Notifications
                    </h2>
                </div>
                <div class="card-body">
                    <form id="notificationSettingsForm">
            <div class="form-group">
                            <label class="form-label">Email Notifications</label>
                            <div class="form-check">
                                <input type="checkbox" id="newBookingEmail" class="form-check-input" checked>
                                <label class="form-check-label" for="newBookingEmail">New Booking Notifications</label>
                </div>
                            <div class="form-check">
                                <input type="checkbox" id="reminderEmail" class="form-check-input" checked>
                                <label class="form-check-label" for="reminderEmail">Booking Reminders</label>
                    </div>
                            <div class="form-check">
                                <input type="checkbox" id="reviewEmail" class="form-check-input" checked>
                                <label class="form-check-label" for="reviewEmail">New Review Notifications</label>
                </div>
            </div>
            
            <div class="form-group">
                            <label class="form-label">SMS Notifications</label>
                            <div class="form-check">
                                <input type="checkbox" id="newBookingSMS" class="form-check-input">
                                <label class="form-check-label" for="newBookingSMS">New Booking Notifications</label>
                            </div>
                            <div class="form-check">
                                <input type="checkbox" id="reminderSMS" class="form-check-input" checked>
                                <label class="form-check-label" for="reminderSMS">Booking Reminders</label>
                            </div>
            </div>
            
                        <button type="submit" class="btn btn-primary save-button">
                            <i class="fas fa-save"></i>
                            Save Changes
                        </button>
                    </form>
            </div>
            </div>
    </div>
</div>

<script>
        // Color picker functionality
        const colorOptions = document.querySelectorAll('.color-option');
        colorOptions.forEach(option => {
            option.addEventListener('click', () => {
                colorOptions.forEach(opt => opt.classList.remove('active'));
                option.classList.add('active');
                // Update primary color in CSS variables
                document.documentElement.style.setProperty('--color-primary', option.dataset.color);
            });
        });

        // Function to handle form submission
        async function handleSettingsSubmit(formId, formData) {
            try {
                console.log('Submitting form data:', formData); // Debug log
                const response = await fetch('/api/settings/update', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });
                
                const result = await response.json();
                console.log('Server response:', result); // Debug log
                
                if (result.success) {
                    showNotification('Settings saved successfully!', 'success');
                    // Reload page after a short delay to show the success message
                    setTimeout(() => window.location.reload(), 1000);
                } else {
                    throw new Error(result.message || 'Failed to save settings');
                }
            } catch (error) {
                console.error('Error saving settings:', error);
                showNotification('Error saving settings: ' + error.message, 'error');
            }
        }

        // Handle basic info form submission
        document.getElementById('generalSettingsForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            const formData = {
                salonName: document.getElementById('salonName').value,
                email: document.getElementById('salonEmail').value,
                phone: document.getElementById('salonPhone').value,
                address: document.getElementById('salonAddress').value,
                businessName: document.getElementById('businessName').value,
                latitude: parseFloat(document.getElementById('latitude').value),
                longitude: parseFloat(document.getElementById('longitude').value)
            };
            await handleSettingsSubmit('generalSettingsForm', formData);
        });

        // Handle appearance settings form submission
        document.getElementById('appearanceSettingsForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            const formData = {
                servicesViewMode: document.getElementById('servicesViewMode')?.value || 'grid',
                currencySymbol: document.getElementById('currencySymbol')?.value || '₹',
                heroTitle: document.getElementById('heroTitle')?.value || '',
                heroSubtitle: document.getElementById('heroSubtitle')?.value || '',
                aboutText: document.getElementById('aboutText')?.value || ''
            };
            await handleSettingsSubmit('appearanceSettingsForm', formData);
        });

        // Handle social media settings form submission
        document.getElementById('socialSettingsForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            const formData = {
                socialMedia: {
                    facebook: document.getElementById('facebookUrl').value || '',
                    instagram: document.getElementById('instagramUrl').value || '',
                    twitter: document.getElementById('twitterUrl').value || '',
                    youtube: document.getElementById('youtubeUrl').value || ''
                }
            };
            await handleSettingsSubmit('socialSettingsForm', formData);
        });

        // Handle notification settings form submission
        document.getElementById('notificationSettingsForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            const formData = {
                emailNotifications: {
                    newBookingEmail: document.getElementById('newBookingEmail').checked,
                    reminderEmail: document.getElementById('reminderEmail').checked,
                    reviewEmail: document.getElementById('reviewEmail').checked
                },
                smsNotifications: {
                    newBookingSMS: document.getElementById('newBookingSMS').checked,
                    reminderSMS: document.getElementById('reminderSMS').checked
                }
            };
            await handleSettingsSubmit('notificationSettingsForm', formData);
        });

        // File upload preview
        document.getElementById('logoUpload').addEventListener('change', function(e) {
            if (e.target.files && e.target.files[0]) {
                // Handle logo upload preview
                console.log('Logo file selected:', e.target.files[0].name);
            }
        });

        document.getElementById('faviconUpload').addEventListener('change', function(e) {
            if (e.target.files && e.target.files[0]) {
                // Handle favicon upload preview
                console.log('Favicon file selected:', e.target.files[0].name);
            }
        });

        // Function to show notifications
        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.textContent = message;
            
            // Style the notification
            notification.style.position = 'fixed';
            notification.style.top = '20px';
            notification.style.right = '20px';
            notification.style.padding = '15px 25px';
            notification.style.borderRadius = '4px';
            notification.style.color = 'white';
            notification.style.zIndex = '1000';
            notification.style.animation = 'slideIn 0.5s ease-out';
            
            // Set background color based on type
            if (type === 'success') {
                notification.style.backgroundColor = '#4CAF50';
            } else if (type === 'error') {
                notification.style.backgroundColor = '#f44336';
            }
            
            document.body.appendChild(notification);
            
            // Remove notification after 3 seconds
            setTimeout(() => {
                notification.style.animation = 'slideOut 0.5s ease-out';
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 500);
            }, 3000);
        }

        // Add CSS for notifications
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideIn {
                from { transform: translateX(100%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }
            @keyframes slideOut {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(100%); opacity: 0; }
            }
        `;
        document.head.appendChild(style);
</script>
</body>
</html> 